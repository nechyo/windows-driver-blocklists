# .github/workflows/check-updates.yml
name: Check Driver Policy Updates

on:
  schedule:
    - cron: '0 */1 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  check-and-update:
    runs-on: windows-latest
    outputs:
      status: ${{ steps.set-status.outputs.status }}
      update_name: ${{ steps.check.outputs.update_name }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          architecture: 'x64'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 tqdm
        shell: powershell

      - name: Initialize latest.txt if not exists
        run: |
          if (-not (Test-Path latest.txt)) {
            "" | Out-File -FilePath latest.txt
          }
        shell: powershell

      - name: Check for updates and get update name
        id: check
        run: |
          if ($false -eq $true) {
            Write-Output "No new updates found"
            echo "update_needed=false" >> $env:GITHUB_OUTPUT
          } else {
            Write-Output "Updates available"
            echo "update_needed=true" >> $env:GITHUB_OUTPUT
          }
        shell: powershell

      - name: Set status
        id: set-status
        run: |
          if ("${{ steps.check.outputs.update_needed }}" -eq "true") {
            echo "status=update_found" >> $env:GITHUB_OUTPUT
          } else {
            echo "status=no_update" >> $env:GITHUB_OUTPUT
          }
        shell: powershell

      - name: Download and extract policy
        if: steps.check.outputs.update_needed == 'true'
        run: |
          (New-Object System.Net.WebClient).DownloadFile('https://get.scoop.sh', 'scoop.ps1')
          ./scoop.ps1 -RunAsAdmin
          scoop install 7zip
          
          python downloader.py

          ./process-esd.ps1
        shell: powershell

      - name: Upload Driver Policy Update
        if: steps.check.outputs.update_needed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: driver-policy-${{ steps.check.outputs.update_name }}
          path: output/driversipolicy.p7b
          retention-days: 90
          if-no-files-found: error

      - name: Update latest UUID
        if: steps.check.outputs.update_needed == 'true'
        run: |
          Copy-Item current_uuid.txt latest.txt
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add latest.txt
          git commit -m "${{ steps.check.outputs.update_name }}"
          git push
        shell: powershell

      - name: Create job summary
        run: |
          if ("${{ steps.check.outputs.update_needed }}" -eq "true") {
            echo "### ✅ New Update Found!" >> $env:GITHUB_STEP_SUMMARY
            echo "Update Name: ${{ steps.check.outputs.update_name }}" >> $env:GITHUB_STEP_SUMMARY
            echo "Artifact has been uploaded." >> $env:GITHUB_STEP_SUMMARY
          } else {
            echo "### ℹ️ No Updates Available" >> $env:GITHUB_STEP_SUMMARY
            echo "No new driver policy updates were found." >> $env:GITHUB_STEP_SUMMARY
          }
        shell: powershell