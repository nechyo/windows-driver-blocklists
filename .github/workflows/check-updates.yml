# .github/workflows/check-updates.yml
name: Check Driver Policy Updates

on:
  schedule:
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  check-and-update:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 tqdm
        shell: powershell

      - name: Initialize latest.txt if not exists
        run: |
          if (-not (Test-Path latest.txt)) {
            "" | Out-File -FilePath latest.txt
          }
        shell: powershell

      - name: Check for updates and get update name
        id: check
        run: |
          $currentUuid = python -c "from downloader import get_uuid; print(get_uuid())"
          $currentUuid | Out-File -FilePath current_uuid.txt
          
          # Get update name
          $updateName = python -c "
          import requests, json
          uuid = '$currentUuid'
          api_url = f'https://api.uupdump.net/get.php?id={uuid}&lang=en-us&edition=professional'
          response = requests.get(api_url)
          data = response.json()
          print(data['response']['updateName'])
          "
          echo "update_name=$updateName" >> $env:GITHUB_OUTPUT
          
          if (Test-Path latest.txt) {
            if ((Get-Content latest.txt) -ne $currentUuid) {
              echo "update_needed=true" >> $env:GITHUB_OUTPUT
            } else {
              echo "update_needed=false" >> $env:GITHUB_OUTPUT
            }
          } else {
            echo "update_needed=true" >> $env:GITHUB_OUTPUT
          }
        shell: powershell

      - name: Download and extract policy
        if: steps.check.outputs.update_needed == 'true'
        run: |
          Start-Process -FilePath "python" -ArgumentList "downloader.py" -Verb RunAs -Wait
        shell: powershell

      - name: Upload p7b artifact
        if: steps.check.outputs.update_needed == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.check.outputs.update_name }}
          path: output/driversipolicy.p7b
          retention-days: 90

      - name: Update latest UUID
        if: steps.check.outputs.update_needed == 'true'
        run: |
          Copy-Item current_uuid.txt latest.txt
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add latest.txt
          git commit -m "Update latest UUID for ${{ steps.check.outputs.update_name }}"
          git push
        shell: powershell